#!/bin/zsh

# Constants
readonly program="$(basename "${0}")"

readonly tmp_dir="$(mktemp -d)"
trap 'rm -rf "${tmp_dir}"' EXIT

readonly audio_list="${tmp_dir}/filelist.txt"
readonly joined_audio="${tmp_dir}/concatenated.mp3"
readonly converted_audio="${tmp_dir}/audiobook.m4b"
readonly chapters_list="${converted_audio%.m4b}.chapters.txt"

# Helpers
function error {
  printf "%s\n" "${1}" >&2
  exit 1
}

function timecalc {
  awk '
    BEGIN { FS = ":"; RS = " "; base = 1 }
      /^\+$/ { base = 1 }
      /^-$/ { base = -1 }
      /[[:digit:]]+/ {
        for (i=NF; i>0; --i) { sum += $i * base; base *= 60 }
        base = 1 # Assume + if operand is missing
      }
    END {
      if (sum < 0) { sum = -sum; printf "-" }
      printf "%02d:%02d:%06.3f", sum/3600, sum%3600/60, sum%60
    }
  ' <<< "${@}"
}

# Options
function usage {
  echo "
    Concatenate folder of audio files into a single M4B audiobook file with chapters.
    Chapter markers are set at the starting point of each original file and use the file name as the title.

    Input and output are mandatory. Other flags are optional.
    If no author, title, or cover are provided, ${program} will attempt to extract them from the metadata of the first found audio file.

    Usage:
      ${program} --input <folder> --output <file> --title <name> --author <name> --cover <file>

    Options:
      -i, --input    Folder of audio files to convert.
      -o, --output   Output file to save.
      -t, --title    Title to embed.
      -a, --author   Author name to embed.
      -c, --cover    Image to embed as cover.
      -h, --help     Show this help.
  " | sed -E 's/^ {4}//'

  exit "${1}"
}

args=()
while [[ "${1}" ]]
do
  case "${1}" in
    -h | --help)
      usage 0
      ;;
    -i | --input)
      readonly input="$(realpath "${2}")"
      shift
      ;;
    -o | --output)
      readonly output="${2%.m4b}.m4b" # Add extension if missing
      shift
      ;;
    -t | --title)
      readonly title="${2}"
      shift
      ;;
    -a | --author)
      readonly author="${2}"
      shift
      ;;
    -c | --cover)
      readonly cover="${2}"
      shift
      ;;
    --)
      shift
      args+=("${@}")
      break
      ;;
    -*)
      echo "Unrecognised option: ${1}"
      exit 1
      ;;
    *)
      args+=("${1}")
      ;;
  esac
  shift
done
set -- "${args[@]}"

# Checks
[[ "${1}" =~ ^(-h|--help)$ ]] && usage 0
[[ -d "${input}" && -n "${output}" ]] || usage 1

hash 'ffmpeg' 2> /dev/null || error 'Missing "ffmpeg" in PATH. Install with:\n  brew install ffmpeg'
hash 'mp4chaps' 2> /dev/null || error 'Missing "mp4chaps" in PATH. Install with:\n  brew install mp4v2'
hash 'mp4art' 2> /dev/null || error 'Missing "mp4chaps" in PATH. Install with:\n  brew install mp4v2'
hash 'mp4tags' 2> /dev/null || error 'Missing "mp4chaps" in PATH. Install with:\n  brew install mp4v2'

# Collect audio files
readonly audio_files=("${(@f)$(/usr/bin/find -s "${input}" -depth 1 -iname '*.mp3')}")

[[ -n "${audio_files}" ]] || error "No audio files found in: ${input}"

# Try to extract metadata when not given
[[ -z "${title}" ]] && readonly title="$(ffprobe -loglevel quiet -output_format compact=p=0:nokey=1 -show_entries format_tags=title "${audio_files[1]}")"
[[ -z "${author}" ]] && readonly author="$(ffprobe -loglevel quiet -output_format compact=p=0:nokey=1 -show_entries format_tags=artist "${audio_files[1]}")"

if [[ -z "${cover}" ]]
then
  readonly image_cover="${tmp_dir}/cover.jpeg"
  ffmpeg -loglevel quiet -i "${audio_files[1]}" -an -codec:v copy -update 1 "${image_cover}" && readonly cover="${image_cover}"
fi

# Create lists
current_time='00:00:00.000'

for audio_file in "${audio_files[@]}"
do
  # Add to file list for concatenation
  printf 'file %q\n' "${audio_file}" >> "${audio_list}"

  # Add to chapter list
  printf '%s %s\n' "${current_time}" "$(basename "${audio_file%.*}")" >> "${chapters_list}"
  audio_duration="$(ffprobe -loglevel quiet -output_format compact=p=0:nokey=1 -show_entries format=duration -sexagesimal "${audio_file}")"
  current_time="$(timecalc "${current_time} + ${audio_duration}")"
done

# Concatenate audio files to single file
ffmpeg -hide_banner -f concat -safe 0 -i "${audio_list}" -codec copy "${joined_audio}"

# Get bitrate of concatenated file
readonly joined_bitrate="$(ffprobe -loglevel quiet -output_format compact=p=0:nokey=1 -show_entries format=bit_rate "${joined_audio}")"

# Convert to m4b
ffmpeg -hide_banner -i "${joined_audio}" -codec:a aac -b:a "${joined_bitrate}" "${converted_audio}"

# Add information to file
mp4chaps --import "${converted_audio}"
[[ -n "${title}" ]] && mp4tags --song "${title}" --album "${title}" "${converted_audio}"
[[ -n "${author}" ]] && mp4tags --artist "${author}" "${converted_audio}"
[[ -n "${cover}" ]] && mp4art --add "${cover}" "${converted_audio}"

# Move file to target, guaranteeing m4b extension
mv "${converted_audio}" "${output}"
